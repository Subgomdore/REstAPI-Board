# port
server.port=8007

# view resolver
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# com.project.restfulboard.DataAccessConfig.DataAccessConfig.java
# @Configuration
# @PropertySource("classpath:/application.properties")

#DataBase Setting
spring.datasource.hikari.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.jdbc-url=jdbc:mysql://121.143.137.1:3306/project?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.hikari.username=project
spring.datasource.hikari.password=project
spring.datasource.hikari.connection-test-query=SELECT 1

# JPA Setting
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
logging.level.org.hibernate=info

#jwt
jwt.header=Authorization
jwt.secret=c2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQtc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQK
jwt.token-validity-in-seconds=86400

logging.level.com.project = debug

spring.security.oauth2.client.registration.google.client-id=548877421214-seba3og0muhkq6k2hbr22tkbt45fqv0o.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile

spring.security.oauth2.client.registration.facebook.client-id=544881940832689
spring.security.oauth2.client.registration.facebook.client-secret=197dcdffc7bca65c54efb328abaf4c61
spring.security.oauth2.client.registration.facebook.scope=email,public_profile

spring.security.oauth2.client.registration.naver.client-id=sZgU2117qGAxqiHvk5hZ
spring.security.oauth2.client.registration.naver.client-secret=neWAlQP2Pw
spring.security.oauth2.client.registration.naver.scope=name, public_profile
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8007/login/oauth2/code/naver

# spring 이 naver provider 를 기본적으로 제공해주지 않아 직접 등록을 함.
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
# 회원정보를 json 으로 받는데 response 라는 키값으로 네이버가 리턴해줌.



